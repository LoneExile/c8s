package components

import (
	"k8s.io/api/core/v1"
	"strconv"
)

func readyContainers(pod *v1.Pod) int {
	count := 0
	for _, container := range pod.Status.ContainerStatuses {
		if container.Ready {
			count++
		}
	}
	return count
}

// func statusClass(phase string) string {
// 	switch phase {
// 	case "Running":
// 		return "bg-green-200"
// 	case "Pending":
// 		return "bg-yellow-200"
// 	default:
// 		return "bg-red-200"
// 	}
// }

// hx-trigger="every 1000ms, changed"
templ PodList(pods *v1.PodList) {
	<div
		id="podList"
		class="overflow-x-hidden"
	>
		<div class="w-full flex flex-col">
			<button
				class="btn btn-sm"
				hx-target="#podList"
				hx-swap="outerHTML"
				hx-get="/c/pods"
			>Refresh</button>
		</div>
		<table class="table">
			<!-- head -->
			<thead>
				<tr>
					<th>Namespace</th>
					<th>Pod Name</th>
					<th>Ready</th>
					<th>Status</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				for _, pod := range pods.Items {
					<tr>
						<td>{ pod.Namespace }</td>
						<td>{ pod.Name }</td>
						<td>
							{ strconv.Itoa(readyContainers(&pod)) }/{ strconv.Itoa(len(pod.Status.ContainerStatuses)) }
						</td>
						if pod.Status.Phase == "Running" {
							<td class="bg-green-200">Ready</td>
						} else if pod.Status.Phase == "Pending" {
							<td class="bg-yellow-200">Pending</td>
						} else {
							<td class="bg-red-200">Not Ready</td>
						}
						<td class="">
							<div class="flex flex-col items-center justify-center mx-auto w-full">
								<details class="dropdown dropdown-end">
									<summary class="m-1 btn btn-sm">⚙️ action</summary>
									<ul class="p-2 shadow menu dropdown-content z-[1] bg-base-100 rounded-box w-52">
										<li><a>👶 Restart</a></li>
										<li><a>✏️ Image Tag</a></li>
										<li><a>💻 Exec</a></li>
									</ul>
								</details>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
